{"version":3,"file":"static/js/980.b9562000.chunk.js","mappings":"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","sources":["components/Hooks/hooks.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contacts-slice';\nimport contactsOperations from 'redux/contacts/contacts-operations'; \n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.contacts.filter);\n  const contacts = useSelector(state => state.contacts.items);\n  const isLoading = useSelector(state => state.contacts.loader);\n  const error = useSelector(state => state.contacts.error);\n\n  const setFilter = value => {\n    dispatch(changeFilter(value));\n  };\n\n  const getContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  const addContact = data => {\n    dispatch(contactsOperations.addContact(data));\n  };\n\n  const deleteContact = id => {\n    dispatch(contactsOperations.deleteContact(id));\n  };\n\n  return {\n    filter,\n    contacts,\n    isLoading,\n    error,\n    setFilter,\n    getContacts,\n    addContact,\n    deleteContact,\n  };\n};\n","import { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useContacts } from 'components/Hooks/hooks';\nimport css from '../../components/styles.module.css';\n\nexport const ContactForm = () => {\n  const { contacts, addContact } = useContacts();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n    // console.log(name, value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (name.trim() === '' || number.trim() === '') {\n      toast.warn('Please enter a name and a number');\n      return;\n    }\n\n  const enterContacts = contacts.some(\n    contact =>\n      (contact.name === name.toLowerCase() && contact.number === number) ||\n      contact.number === number\n  );\n\n  if (enterContacts) {\n    toast.error(`${name} or ${number} is already in contacts`);\n  } else {\n    addContact({ name, number });\n    toast.success('The contact has been added to the list');\n  }\n\n  setName('');\n  setNumber('');\n};\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.form_contact}>\n        <label htmlFor=\"exampleInputName\" className={css.form_label}>\n          Name\n          <input\n            name=\"name\"\n            type=\"text\"\n            className={css.form_control}\n            value={name}\n            onChange={handleChange}\n            placeholder=\"Enter name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label htmlFor=\"exampleInputName\" className={css.form_label}>\n          Number\n          <input\n            name=\"number\"\n            type=\"tel\"\n            className={css.form_control}\n            value={number}\n            onChange={handleChange}\n            placeholder=\"Enter phone number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.btn}>Add contact</button>\n      </form>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useContacts } from '../Hooks/hooks';\nimport { contactsOperations } from '../../redux/contacts/contacts-operations';\nimport authSelectors from 'redux/auth/auth-selectors'; \nimport css from '../styles.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const { contacts, isLoading, filter, deleteContact, setFilter } =\n    useContacts();\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  const findContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const filteredContacts = findContacts();\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {isLoggedIn && (\n        <ul className={css.contact_wrap} >\n          {contacts && filteredContacts.map(({ id, name, number }) => {\n            return (\n              <li key={id} className={css.contact_item} >\n                <div className={css.contact_item}>\n                  <h3 className={css.contact_name} >{name}:</h3>\n                  <p>{number}</p>\n                </div>\n                <button\n                  type=\"button\"\n                  className={css.btn_contact}                 \n                  onClick={() => {\n                    deleteContact(id);\n                    setFilter('');\n                  }}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import { useContacts } from './Hooks/hooks';\nimport css from './styles.module.css';\n\nexport const Filter = () => {\n  const { filter, setFilter } = useContacts();\n  return (\n    <div className={css.filter_container}>\n      <h2 className={css.f_title}>Filter by contact name</h2>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={css.form_control}\n        value={filter}\n        placeholder=\"Filter by contact name\"\n        onChange={e => setFilter(e.target.value)}\n      />\n    </div>\n  );\n};","import { ContactForm } from 'components/ContactForm/ContactForm'; \nimport { ContactList } from 'components/ContactList/ContactList';  \nimport { Filter } from 'components/Filter';\nimport css from '../../components/styles.module.css';\n\nconst Contacts = () => {\n  return (\n    <div className={css.contacts_container}>\n      <h2 className={css.contact_title}>Phonebook</h2>\n      <ContactForm />\n      <h2 className={css.cont_title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;"],"names":["useContacts","dispatch","useDispatch","filter","useSelector","state","contacts","items","isLoading","loader","error","setFilter","value","changeFilter","getContacts","contactsOperations","addContact","data","deleteContact","id","ContactForm","useState","name","setName","number","setNumber","handleChange","event","target","handleSubmit","preventDefault","trim","toast","some","contact","toLowerCase","onSubmit","className","css","htmlFor","type","onChange","placeholder","pattern","title","required","ContactList","isLoggedIn","authSelectors","useEffect","filteredContacts","normalizedFilter","includes","findContacts","Loader","map","onClick","Filter","e"],"sourceRoot":""}